Глава 15 Трансформации

	transform: rotate (90deg);//Вращение;

	transform: skew(20deg);//Наклон деформация;

	transform: scale(0.5);//Масштаб 50%;

	transform: translate(20px, 40px);//Смешение относительно своего местоположения;

	transform: translate(100px, 40px) rotate(-4deg) skew(20deg) scale(0.5);

	Если элемент меняет местоположение его действительное место не изменяется и это не влияет на другие элементы.
	Трансформации нельзя применить к нескольким строчным элементам, таким как <a> <span>. Чтобы их трансформировать нужно поменять строчный на др тип.

	transfofm-origin: right bottom left right px % em;//Изменение точки трансформации
	Изменений точки не касается translate();

	Трансформации будут применятся по очереди справа налево.

	Svg оснван на XML

	Svg файлы шрифтов fontawesome.io
										css-tricks.com/using-svg/

	Трансформации намного менее требовательны к ресурсам.

	Рендеринг (визуализацию) можно разбить на три этапа:
	- Разметка. Вычисление места для каждого элемента и при изменении разметки пересчитывается заново;
	- Окрашивание. Отрисовка текста, изображений, приобретают цвет границы и тени. Цвет не влияет на положение на странице др элементов требуется меньше вычислений + аппаратное ускорение (каждый элемент помещается на свой слой и отправляется в gpu);
	- Компановка. Изображения собираются в определенном порядке, что бы одни слои находились над другими. Использование свойств opacity и transform значительно сокращает время рендеринга.

	Разметка цвет компановка csstriggers.com

	will-change - заранее сообщает браузеру каких изменений следует ожидать.
	dev.opera.com/articles/css-will-change-property/

	Cвойств opacity и transform значительно сокращает время рендеринга.

Трехмерные 3D трансформации.

	transform: perspective(200px);//Для каэдого элемента своя точка преспективы
	.class{perspective: 200px}//Общая точка перспективы для всех вложенных элементов

	perspective-origin: left bottom;//Точка перспективы (можно исп-ть любые ед-цы измерения)

	backface-visibility: hidden;//Если повернуть на 180 гр то увидим зеркальное отображение если show.


Итоги главы:
-	Трансформации важны в переходах и анимации с точки зрения производительности;
- Помнить про поток процессов рендеринга и учитывать его при анимации.