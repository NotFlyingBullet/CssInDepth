Глава 4. Плавающие элементы. стр. 118

	Шаблон двойного контейнера для центрирования страницы.
	.container{
	max-width: 1080px;
	margin: 0 auto;
	}

	Плавающий элемент не добавляет высоты родительскому элементу.

	Варианты решения:

	- 	Добавить в конец контейнера содержащего плавающие элементы <div style = "clear: both;"></div>;(поля схлапываются)

	-		.clearfix ::after{//нацеливается на элемент вконце контейнера
			display: block;		//Свойства приводят к появлению псевдоэлемента
			content: " ";			//
			clear: both;			//Псевдоэлемент сбрасывает обтекание всех плавающих элементов в контейнере
			}(поля схлапываются)

	- 	.clearfix::before,
				.clearfix::after{
					display: table;	//Предотвращает схлапывание полей
					content: " ";
				}
			.clearfix::after{
					clear: both;		//Сброс обтекания плавающих полей
			}(поля НЕ схлапываются)

	clearfix применяется к элементу, содержащему плавающие элементы.

	clear: box приводит к смещению этого элемента ниже плввающих и тем самым расширяет родительский контейнер.

	С помощю псевдоэлемента :after модно вставить элементв DOM в конце контейнера без добавления его в разметку.

	У clearfix проблемма поля вмещенных плавающих элементов не схлапываются, а поля не плавающих элементов схлапываются ка обычно.

	content:" "; пробел исправляет ошибку в старых opera. 

	Чтобы контейнеры не цеплялись за нижние края из-за разной высоты необходимо сбрасывать обтекание плавающих элементов расположенных над ними(первый элемент новой сроки должен сбрасывать обтекание плавающего элемента расположенного над ним).

	Адресно выбрать элементы с помощю псевдоэлемента :nth-child(odd) - все нечетные, :nth-child(3n+1) - каждый третий.

	Сброс строки работает только если известно сколько элементов будет находится в каждой строке (если ширина устанавливается не в процентах, то количество элементов в строке может различаться).


	4.4. Медиаобъекты и блочный контекст форматирования. стр. 134

	Свойства блока контекста форматирования:
	- Умещаются верхние и нижние поля всех элементов, они не будут схлопываться с полями элементов вне блочного контекста форматирования;
	- Умещаются все плавающие элементы;
	- Не перекрываются плавающие элементы вне блочного контекста форматирования.

	Контент в блоке контекста форматирования не будет накладываться на элементы вне блока или взаимодействовать с ними, как ожидалось бы в нормальной ситуации.

	Установка блока контекста форматирования:
	- float: left right все кроме none;
	- overflow все кроме visible;
	- display: inline-block table-cell table-caption flex inline-flex grid inline-grid;
	- position: absolute fixed.

	Использование overflow: auto самый простой подход. Следует учитывать, что плавающий или срочно-блочный элемент увеличится до 100% ширины, поэтому потребуется ограничить ширину элемента, дабы предотвратить обертывание строки ниже плавающего элемента. Напротив, ячейка таблицы увеличится на величину контента, поэтому возможно прийдется добавлять ей ширину. 


	4.5. CSS сетки. стр. 138

	[class*="column-"] - Людые элементы с подстрокой column- в любом месте атрибута class


	Итоги главы:

	- Три правила блочного контекста форматирования: уместить плавающие элементы, предотвратить схлопывание полей, предотвратить обтекание плавающего элемента потоком документа;
	- Центрируйте контент с помощю шаблона двойного контейнера;
	- Задействуйте шаблон медиаобъекта для позиционирования текста описания рядом с изображением;
	- Используйте Css сетку для создания массива разметок страниц.